<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxyp.dao.WorksPhotoMapper" >
  <resultMap id="WorksPhotoResultMap" type="com.xxyp.model.WorksPhoto" >
    <id column="works_photo_id" property="worksPhotoId" jdbcType="BIGINT" />
    <result column="works_id" property="worksId" jdbcType="BIGINT" />
    <result column="works_photo" property="worksPhoto" jdbcType="VARCHAR" />
    <result column="works_image_order" property="worksImageOrder" jdbcType="TINYINT" />
    <result column="works_image_like_count" property="worksImageLikeCount" jdbcType="BIGINT" />
    <result column="works_image_comment_count" property="worksImageCommentCount" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    works_photo_id, works_id, works_photo, works_image_order, works_image_like_count, 
    works_image_comment_count, status
  </sql>
  <select id="selectByExample" resultMap="WorksPhotoResultMap" parameterType="com.xxyp.model.WorksPhotoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from works_photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="WorksPhotoResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from works_photo
    where works_photo_id = #{worksPhotoId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from works_photo
    where works_photo_id = #{worksPhotoId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxyp.model.WorksPhotoExample" >
    delete from works_photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxyp.model.WorksPhoto" >
    insert into works_photo (works_photo_id, works_id, works_photo, 
      works_image_order, works_image_like_count, works_image_comment_count, 
      status)
    values (#{worksPhotoId,jdbcType=BIGINT}, #{worksId,jdbcType=BIGINT}, #{worksPhoto,jdbcType=VARCHAR}, 
      #{worksImageOrder,jdbcType=TINYINT}, #{worksImageLikeCount,jdbcType=BIGINT}, #{worksImageCommentCount,jdbcType=BIGINT}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xxyp.model.WorksPhoto" >
    insert into works_photo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="worksPhotoId != null" >
        works_photo_id,
      </if>
      <if test="worksId != null" >
        works_id,
      </if>
      <if test="worksPhoto != null" >
        works_photo,
      </if>
      <if test="worksImageOrder != null" >
        works_image_order,
      </if>
      <if test="worksImageLikeCount != null" >
        works_image_like_count,
      </if>
      <if test="worksImageCommentCount != null" >
        works_image_comment_count,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="worksPhotoId != null" >
        #{worksPhotoId,jdbcType=BIGINT},
      </if>
      <if test="worksId != null" >
        #{worksId,jdbcType=BIGINT},
      </if>
      <if test="worksPhoto != null" >
        #{worksPhoto,jdbcType=VARCHAR},
      </if>
      <if test="worksImageOrder != null" >
        #{worksImageOrder,jdbcType=TINYINT},
      </if>
      <if test="worksImageLikeCount != null" >
        #{worksImageLikeCount,jdbcType=BIGINT},
      </if>
      <if test="worksImageCommentCount != null" >
        #{worksImageCommentCount,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxyp.model.WorksPhotoExample" resultType="java.lang.Integer" >
    select count(*) from works_photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update works_photo
    <set >
      <if test="record.worksPhotoId != null" >
        works_photo_id = #{record.worksPhotoId,jdbcType=BIGINT},
      </if>
      <if test="record.worksId != null" >
        works_id = #{record.worksId,jdbcType=BIGINT},
      </if>
      <if test="record.worksPhoto != null" >
        works_photo = #{record.worksPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.worksImageOrder != null" >
        works_image_order = #{record.worksImageOrder,jdbcType=TINYINT},
      </if>
      <if test="record.worksImageLikeCount != null" >
        works_image_like_count = #{record.worksImageLikeCount,jdbcType=BIGINT},
      </if>
      <if test="record.worksImageCommentCount != null" >
        works_image_comment_count = #{record.worksImageCommentCount,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update works_photo
    set works_photo_id = #{record.worksPhotoId,jdbcType=BIGINT},
      works_id = #{record.worksId,jdbcType=BIGINT},
      works_photo = #{record.worksPhoto,jdbcType=VARCHAR},
      works_image_order = #{record.worksImageOrder,jdbcType=TINYINT},
      works_image_like_count = #{record.worksImageLikeCount,jdbcType=BIGINT},
      works_image_comment_count = #{record.worksImageCommentCount,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxyp.model.WorksPhoto" >
    update works_photo
    <set >
      <if test="worksId != null" >
        works_id = #{worksId,jdbcType=BIGINT},
      </if>
      <if test="worksPhoto != null" >
        works_photo = #{worksPhoto,jdbcType=VARCHAR},
      </if>
      <if test="worksImageOrder != null" >
        works_image_order = #{worksImageOrder,jdbcType=TINYINT},
      </if>
      <if test="worksImageLikeCount != null" >
        works_image_like_count = #{worksImageLikeCount,jdbcType=BIGINT},
      </if>
      <if test="worksImageCommentCount != null" >
        works_image_comment_count = #{worksImageCommentCount,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where works_photo_id = #{worksPhotoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxyp.model.WorksPhoto" >
    update works_photo
    set works_id = #{worksId,jdbcType=BIGINT},
      works_photo = #{worksPhoto,jdbcType=VARCHAR},
      works_image_order = #{worksImageOrder,jdbcType=TINYINT},
      works_image_like_count = #{worksImageLikeCount,jdbcType=BIGINT},
      works_image_comment_count = #{worksImageCommentCount,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT}
    where works_photo_id = #{worksPhotoId,jdbcType=BIGINT}
  </update>
</mapper>