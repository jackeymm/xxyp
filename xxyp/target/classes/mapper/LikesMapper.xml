<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxyp.dao.LikesMapper" >
  <resultMap id="LikesResultMap" type="com.xxyp.model.Likes" >
    <id column="likes_id" property="likesId" jdbcType="BIGINT" />
    <result column="like_user_id" property="likeUserId" jdbcType="BIGINT" />
    <result column="work_id" property="workId" jdbcType="BIGINT" />
    <result column="work_type" property="workType" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    likes_id, like_user_id, work_id, work_type
  </sql>
  <select id="selectByExample" resultMap="LikesResultMap" parameterType="com.xxyp.model.LikesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from likes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="LikesResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from likes
    where likes_id = #{likesId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from likes
    where likes_id = #{likesId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxyp.model.LikesExample" >
    delete from likes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxyp.model.Likes" >
    insert into likes (likes_id, like_user_id, work_id, 
      work_type)
    values (#{likesId,jdbcType=BIGINT}, #{likeUserId,jdbcType=BIGINT}, #{workId,jdbcType=BIGINT}, 
      #{workType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xxyp.model.Likes" >
    insert into likes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="likesId != null" >
        likes_id,
      </if>
      <if test="likeUserId != null" >
        like_user_id,
      </if>
      <if test="workId != null" >
        work_id,
      </if>
      <if test="workType != null" >
        work_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="likesId != null" >
        #{likesId,jdbcType=BIGINT},
      </if>
      <if test="likeUserId != null" >
        #{likeUserId,jdbcType=BIGINT},
      </if>
      <if test="workId != null" >
        #{workId,jdbcType=BIGINT},
      </if>
      <if test="workType != null" >
        #{workType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxyp.model.LikesExample" resultType="java.lang.Integer" >
    select count(*) from likes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update likes
    <set >
      <if test="record.likesId != null" >
        likes_id = #{record.likesId,jdbcType=BIGINT},
      </if>
      <if test="record.likeUserId != null" >
        like_user_id = #{record.likeUserId,jdbcType=BIGINT},
      </if>
      <if test="record.workId != null" >
        work_id = #{record.workId,jdbcType=BIGINT},
      </if>
      <if test="record.workType != null" >
        work_type = #{record.workType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update likes
    set likes_id = #{record.likesId,jdbcType=BIGINT},
      like_user_id = #{record.likeUserId,jdbcType=BIGINT},
      work_id = #{record.workId,jdbcType=BIGINT},
      work_type = #{record.workType,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxyp.model.Likes" >
    update likes
    <set >
      <if test="likeUserId != null" >
        like_user_id = #{likeUserId,jdbcType=BIGINT},
      </if>
      <if test="workId != null" >
        work_id = #{workId,jdbcType=BIGINT},
      </if>
      <if test="workType != null" >
        work_type = #{workType,jdbcType=TINYINT},
      </if>
    </set>
    where likes_id = #{likesId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxyp.model.Likes" >
    update likes
    set like_user_id = #{likeUserId,jdbcType=BIGINT},
      work_id = #{workId,jdbcType=BIGINT},
      work_type = #{workType,jdbcType=TINYINT}
    where likes_id = #{likesId,jdbcType=BIGINT}
  </update>
</mapper>