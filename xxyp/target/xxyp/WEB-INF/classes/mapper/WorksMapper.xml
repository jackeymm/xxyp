<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxyp.dao.WorksMapper">
  <resultMap id="WorksResultMap" type="com.xxyp.model.Works">
  <id column="works_id" jdbcType="BIGINT" property="worksId" />
  <result column="user_id" jdbcType="BIGINT" property="userId" />
  <result column="works_address" jdbcType="VARCHAR" property="worksAddress" />
  <result column="release_time" jdbcType="BIGINT" property="releaseTime" />
  <result column="status" jdbcType="TINYINT" property="status" />
  <result column="works_title" jdbcType="VARCHAR" property="worksTitle" />
  <result column="works_introduction" jdbcType="VARCHAR" property="worksIntroduction" />
</resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    works_id, user_id,  works_address, release_time, status, works_title,
    works_introduction
  </sql>
  <select id="selectByExample" parameterType="com.xxyp.model.WorksExample" resultMap="WorksResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from works
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="WorksResultMap">
    select 
    <include refid="Base_Column_List" />
    from works
    where works_id = #{worksId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from works
    where works_id = #{worksId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxyp.model.WorksExample">
    delete from works
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxyp.model.Works">
    insert into works (works_id, user_id, works_address, release_time,
      status, works_title, works_introduction
      )
    values (#{worksId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{worksAddress,jdbcType=VARCHAR}, #{releaseTime,jdbcType=BIGINT},
      #{status,jdbcType=TINYINT}, #{worksTitle,jdbcType=VARCHAR}, #{worksIntroduction,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxyp.model.Works">
    insert into works
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="worksId != null">
        works_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="worksAddress != null">
        works_address,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="worksTitle != null">
        works_title,
      </if>
      <if test="worksIntroduction != null">
        works_introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="worksId != null">
        #{worksId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="worksAddress != null">
        #{worksAddress,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="worksTitle != null">
        #{worksTitle,jdbcType=VARCHAR},
      </if>
      <if test="worksIntroduction != null">
        #{worksIntroduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxyp.model.WorksExample" resultType="java.lang.Integer">
    select count(*) from works
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update works
    <set>
      <if test="record.worksId != null">
        works_id = #{record.worksId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.worksAddress != null">
        works_address = #{record.worksAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseTime != null">
        release_time = #{record.releaseTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.worksTitle != null">
        works_title = #{record.worksTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.worksIntroduction != null">
        works_introduction = #{record.worksIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update works
    set works_id = #{record.worksId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      works_address = #{record.worksAddress,jdbcType=VARCHAR},
      release_time = #{record.releaseTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT},
      works_title = #{record.worksTitle,jdbcType=VARCHAR},
      works_introduction = #{record.worksIntroduction,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxyp.model.Works">
    update works
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="worksAddress != null">
        works_address = #{worksAddress,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="worksTitle != null">
        works_title = #{worksTitle,jdbcType=VARCHAR},
      </if>
      <if test="worksIntroduction != null">
        works_introduction = #{worksIntroduction,jdbcType=VARCHAR},
      </if>
    </set>
    where works_id = #{worksId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxyp.model.Works">
    update works
    set user_id = #{userId,jdbcType=BIGINT},
      works_address = #{worksAddress,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      works_title = #{worksTitle,jdbcType=VARCHAR},
      works_introduction = #{worksIntroduction,jdbcType=VARCHAR}
    where works_id = #{worksId,jdbcType=BIGINT}
  </update>

</mapper>